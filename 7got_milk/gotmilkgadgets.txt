Gadgets information
============================================================
0x08048895 : adc al, 0x41 ; ret
0x0804855a : adc al, 0x68 ; sub al, 0xa0 ; add al, 8 ; call eax
0x08048492 : adc al, 0xa0 ; add al, 8 ; push 0x10 ; jmp 0x8048460
0x080485a6 : adc byte ptr [eax + 0x68], dl ; sub al, 0xa0 ; add al, 8 ; call edx
0x08048497 : adc byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x08048657 : adc byte ptr [ebx - 0x7c72f314], al ; push eax ; out 0xff, eax ; call dword ptr [eax - 0x18]
0x08048564 : adc cl, cl ; ret
0x0804865c : adc dword ptr [eax - 0x19], -1 ; call dword ptr [eax - 0x18]
0x080485d8 : add al, 8 ; add ecx, ecx ; ret
0x0804855e : add al, 8 ; call eax
0x080485ab : add al, 8 ; call edx
0x08048474 : add al, 8 ; push 0 ; jmp 0x8048460
0x08048494 : add al, 8 ; push 0x10 ; jmp 0x8048460
0x080484a4 : add al, 8 ; push 0x18 ; jmp 0x8048460
0x080484b4 : add al, 8 ; push 0x20 ; jmp 0x8048460
0x080484c4 : add al, 8 ; push 0x28 ; jmp 0x8048460
0x08048484 : add al, 8 ; push 8 ; jmp 0x8048460
0x0804884e : add al, ch ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x0804856f : add bl, dh ; ret
0x0804856d : add byte ptr [eax], al ; add bl, dh ; ret
0x08048477 : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x080485ec : add byte ptr [eax], al ; add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x8048580
0x0804856c : add byte ptr [eax], al ; add byte ptr [eax], al ; repz ret
0x080485ed : add byte ptr [eax], al ; add byte ptr [ebp - 0x77], dl ; in eax, 0x5d ; jmp 0x8048580
0x08048450 : add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x08048479 : add byte ptr [eax], al ; jmp 0x8048460
0x080485ee : add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x8048580
0x0804856e : add byte ptr [eax], al ; repz ret
0x080484f5 : add byte ptr [ebp - 0x18cf7d], cl ; call dword ptr [eax - 0x73]
0x080485ef : add byte ptr [ebp - 0x77], dl ; in eax, 0x5d ; jmp 0x8048580
0x08048852 : add dword ptr [eax], eax ; inc ecx ; ret
0x080485d5 : add eax, 0x804a02c ; add ecx, ecx ; ret
0x080485da : add ecx, ecx ; ret
0x08048562 : add esp, 0x10 ; leave ; ret
0x08048725 : add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048452 : add esp, 8 ; pop ebx ; ret
0x080484b7 : and byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x08048892 : and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x08048673 : and dword ptr [ebx - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]
0x08048502 : call dword ptr [eax + 0x51]
0x08048660 : call dword ptr [eax - 0x18]
0x080484fb : call dword ptr [eax - 0x73]
0x08048560 : call eax
0x080485ad : call edx
0x080487b7 : call esp
0x080486c8 : clc ; pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x080486ce : cld ; ret
0x080485eb : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; push ebp ; mov ebp, esp ; pop ebp ; jmp 0x8048580
0x0804856b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; repz ret
0x08048890 : dec ebp ; push cs ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x08048512 : hlt ; mov ebx, dword ptr [esp] ; ret
0x08048559 : in al, dx ; adc al, 0x68 ; sub al, 0xa0 ; add al, 8 ; call eax
0x080485a5 : in al, dx ; adc byte ptr [eax + 0x68], dl ; sub al, 0xa0 ; add al, 8 ; call edx
0x08048659 : in al, dx ; or al, 0x8d ; adc dword ptr [eax - 0x19], -1 ; call dword ptr [eax - 0x18]
0x08048670 : in al, dx ; or al, 0x8d ; and dword ptr [ebx - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]
0x0804869c : in al, dx ; or al, 0x8d ; xor dword ptr [edi - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]
0x080485f2 : in eax, 0x5d ; jmp 0x8048580
0x08048557 : in eax, 0x83 ; in al, dx ; adc al, 0x68 ; sub al, 0xa0 ; add al, 8 ; call eax
0x08048854 : inc ecx ; ret
0x08048893 : inc edi ; push cs ; adc al, 0x41 ; ret
0x080485d3 : inc esi ; add eax, 0x804a02c ; add ecx, ecx ; ret
0x080485de : jbe 0x80485e0 ; repz ret
0x0804872e : jbe 0x8048730 ; repz ret
0x080485b5 : je 0x80485dd ; add bl, dh ; ret
0x08048724 : jecxz 0x80486a9 ; les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x0804844e : jle 0x8048450 ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x0804847b : jmp 0x8048460
0x080485f4 : jmp 0x8048580
0x080487af : jmp dword ptr [eax + 0x48000000]
0x080487bf : jmp dword ptr [eax]
0x08048723 : jne 0x8048708 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0804884c : jne 0x80488ca ; add al, ch ; ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x08048569 : lea edi, [edi] ; repz ret
0x080485b4 : lea esi, [esi] ; repz ret
0x080486c6 : lea esp, [ebp - 8] ; pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x080486cc : lea esp, [ecx - 4] ; ret
0x08048565 : leave ; ret
0x08048453 : les ecx, ptr [eax] ; pop ebx ; ret
0x08048726 : les ecx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x08048563 : les edx, ptr [eax] ; leave ; ret
0x080485d7 : mov al, byte ptr [0xc9010804] ; ret
0x0804855d : mov al, byte ptr [0xd0ff0804] ; add esp, 0x10 ; leave ; ret
0x080485aa : mov al, byte ptr [0xd2ff0804] ; add esp, 0x10 ; leave ; ret
0x080485d4 : mov byte ptr [0x804a02c], 1 ; leave ; ret
0x080485f1 : mov ebp, esp ; pop ebp ; jmp 0x8048580
0x08048513 : mov ebx, dword ptr [esp] ; ret
0x0804856a : mov esp, 0x27 ; add bl, dh ; ret
0x0804852f : nop ; mov ebx, dword ptr [esp] ; ret
0x0804852d : nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x0804852b : nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x08048518 : nop ; nop ; nop ; nop ; nop ; repz ret
0x0804851a : nop ; nop ; nop ; nop ; repz ret
0x0804851c : nop ; nop ; nop ; repz ret
0x0804851e : nop ; nop ; repz ret
0x0804851f : nop ; repz ret
0x08048727 : or al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0804865a : or al, 0x8d ; adc dword ptr [eax - 0x19], -1 ; call dword ptr [eax - 0x18]
0x08048671 : or al, 0x8d ; and dword ptr [ebx - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]
0x0804869d : or al, 0x8d ; xor dword ptr [edi - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]
0x08048472 : or al, 0xa0 ; add al, 8 ; push 0 ; jmp 0x8048460
0x08048487 : or byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x080485d9 : or byte ptr [ecx], al ; leave ; ret
0x08048500 : out 0xff, al ; call dword ptr [eax + 0x51]
0x0804865e : out 0xff, eax ; call dword ptr [eax - 0x18]
0x080484f9 : out 0xff, eax ; call dword ptr [eax - 0x73]
0x080485f3 : pop ebp ; jmp 0x8048580
0x080486cb : pop ebp ; lea esp, [ecx - 4] ; ret
0x0804872b : pop ebp ; ret
0x080486ca : pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x08048728 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x08048455 : pop ebx ; ret
0x080486c9 : pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x0804872a : pop edi ; pop ebp ; ret
0x08048729 : pop esi ; pop edi ; pop ebp ; ret
0x080486cd : popal ; cld ; ret
0x08048476 : push 0 ; jmp 0x8048460
0x08048496 : push 0x10 ; jmp 0x8048460
0x080484a6 : push 0x18 ; jmp 0x8048460
0x080484b6 : push 0x20 ; jmp 0x8048460
0x080484c6 : push 0x28 ; jmp 0x8048460
0x0804855b : push 0x804a02c ; call eax
0x080485a8 : push 0x804a02c ; call edx
0x08048486 : push 8 ; jmp 0x8048460
0x08048894 : push cs ; adc al, 0x41 ; ret
0x08048891 : push cs ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x0804888e : push cs ; xor byte ptr [ebp + 0xe], cl ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x0804865d : push eax ; out 0xff, eax ; call dword ptr [eax - 0x18]
0x080485a7 : push eax ; push 0x804a02c ; call edx
0x080485f0 : push ebp ; mov ebp, esp ; pop ebp ; jmp 0x8048580
0x08048511 : push esp ; mov ebx, dword ptr [esp] ; ret
0x08048520 : repz ret
0x0804843e : ret
0x0804858e : ret 0xeac1
0x08048850 : ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x08048514 : sbb al, 0x24 ; ret
0x080484b2 : sbb al, 0xa0 ; add al, 8 ; push 0x20 ; jmp 0x8048460
0x080484a7 : sbb byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x080484f3 : sbb eax, dword ptr [eax] ; add byte ptr [ebp - 0x18cf7d], cl ; call dword ptr [eax - 0x73]
0x080485d6 : sub al, 0xa0 ; add al, 8 ; add ecx, ecx ; ret
0x0804855c : sub al, 0xa0 ; add al, 8 ; call eax
0x080485a9 : sub al, 0xa0 ; add al, 8 ; call edx
0x080484c7 : sub byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8048460
0x080485a4 : sub esp, 0x10 ; push eax ; push 0x804a02c ; call edx
0x08048558 : sub esp, 0x14 ; push 0x804a02c ; call eax
0x08048568 : test byte ptr [ebp + 0x27bc], 0 ; add bl, dh ; ret
0x0804888f : xor byte ptr [ebp + 0xe], cl ; and byte ptr [edi + 0xe], al ; adc al, 0x41 ; ret
0x0804869f : xor dword ptr [edi - 0x19], 0xffffffff ; call dword ptr [eax - 0x18]

Unique gadgets found: 147
